@using System.Text.RegularExpressions;

@{
    Layout = "~/_SiteMessage.cshtml";
    Page.Title = "Peer Search";
    if (WebSecurity.CurrentUserName == "")
    {
        Response.Redirect("~/Account/Login");
    }
    
    // Initialize general page variables
    var city = "";
    var state = "";
    var userName = WebSecurity.CurrentUserName;
    var userID = WebSecurity.CurrentUserId;
    
    Response.OutputCache(60);

    if (UrlData[0].IsEmpty())
    {
        Response.Redirect("~/Home");
    }

    var search = UrlData[0];

    var commands = search.Split(',');

    city = Regex.Replace(commands[0], @"\s+", " ");

    if (city != "")
    {
        city = char.ToUpper(city[0]) + city.Substring(1);
    }
    
       if (commands.Count() > 1)
   {
      state = Regex.Replace(commands[1], @"\s+", " ");
       }

       if (state != "")
       {
           state = state.ToUpper();
       }
       
    var roles = (SimpleRoleProvider)Roles.Provider;

    if (roles.GetRolesForUser(userName).Contains("Client"))
    {
        Response.Redirect("~/Premium/ClientHome");
    }
    
    var db = Database.Open("StarterSite");

    var user = db.QueryValue("SELECT [Disabled] FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", userName);

    if (user)
    {
        Response.Redirect("~/Account/Disabled Account");
    }

    var data = db.Query("SELECT [UserProfile].* FROM [UserProfile] WHERE [UserProfile].[City] LIKE @0 AND [UserProfile].[stateProvider] LIKE @1 AND [UserProfile].[hasTherapist] is NULL AND [UserProfile].[Disabled]=@2", "%" + city.Trim() + "%", "%" + state.Trim() + "%", false);  
    
   }

<script src="https://maps.googleapis.com/maps/api/js?keyAIzaSyBvcbhUUeExq3SvCT3QLM3w27mja0I8zns&sensor=false"></script>

<section class="featured"> 
     <div class="content-wrapper">  
<hgroup class="title">
            <h1>@Page.Title.</h1>
            <h2>Sharapist: A Network For Therapy</h2>
</hgroup>
     <form method="post" id="form1" name="form1" enctype="multipart/form-data">
               <input type="hidden" name="location" id="location" value="@search" />
               <div id="map-canvas" style="width: 200px; height: 200px; border: solid"></div>
            <h2>Search Results By Location: </h2>
               <div id="list-search">
                  @if (data.Count() > 0)
                  {
                    <ul>
                      @foreach (var peer in data)
                      {
                    <li onclick="goToPeer(@peer.UserId)">
                        @if (peer.ProfileImageMIME != null)
                         {
                        <img alt="Images from @peer.firstName @peer.lastName" style="height: 45px; width: 45px" src="~/Dynamic/PeerImage/@peer.UserId" class="thumbnail-no-border" />
                         }
                        else
                         {
                           <img src="~/Images/DefaultProfile.png" alt="" height="30"  width="30" />   
                         } 
                         <a href="~/Profile/PeerView/@peer.UserId" style="font:bold 15px arial,verdana; vertical-align: central;">@peer.firstName @peer.lastName</a>
                        @if(peer.Disabled)
                {
                    <label>Occupation: @peer.Occupation-Direct Access Certified</label>
                }
                else
                {
                    <label>Occupation: @peer.Occupation</label>
                }
                        <label>Company/Business: @peer.Company</label>
                        <label>Location: @peer.City,@peer.stateProvider</label>
                            </li>
                      }
                   </ul>
                  }
                   else
                   {
                     <label>No Peers Found!!</label> 
                  }
              </div>
        </form>
      </div>
    <script type="text/javascript">
        var geocoder;
        var map;
        function initialize() {
            var address = document.getElementById("location").value;
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(38.898748, -77.037684);
            var mapOptions = {
                zoom: 12,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);
</script>
    </section>