@section Scripts {
     <script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
     <script type="text/javascript"> $(".chzn-select").chosen(); $(".chzn-select-deselect").chosen({ allow_single_deselect: true }); </script>
}

@{
    Layout = "~/_SiteMain.cshtml";
    Page.Title = "Create/Modify Exercise Plan";
    if (WebSecurity.CurrentUserName == "")
    {
        Response.Redirect("~/Account/Login");
    }

    // Initialize general page variables
    var exerciseName = "";
    var detailExercise = Request.Unvalidated("detailExercise");
    var demoImage = "";
    var video = Request.Unvalidated("video1");
    var exerciseID = "";
    var userName = WebSecurity.CurrentUserName;
    var userID = WebSecurity.CurrentUserId;
    var fileName = "";
    var fileMime = "";
    var count = 0;
    var countLimit = 2000;
    var image = "";
    List<dynamic> category = new List<dynamic>();

    
    Response.OutputCache(60);

    if (!UrlData[0].IsInt())
    {
        Response.Redirect("~/Plan/Plan");           
    }
    
    var plan = UrlData[0].AsInt();
    
    var roles = (SimpleRoleProvider)Roles.Provider;

    if (roles.GetRolesForUser(userName).Contains("Client"))
    {
        Response.Redirect("~/Premium/ClientHome");
    }
    
    var db = Database.Open("StarterSite");

    var user = db.QueryValue("SELECT [Disabled] FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", userName);

    if (user)
    {
        Response.Redirect("~/Account/Disabled Account");
    }

    var findOwner = db.QuerySingle("SELECT [UserProfile].*, [PlanPrem].[name], [PlanPrem].[Category] FROM [UserProfile] INNER JOIN [PlanPrem] ON [UserProfile].[UserId]=[PlanPrem].[therapistId] WHERE [PlanPrem].[id]=@0", plan);

    if (findOwner.Category != null)
    {
        foreach (var item in findOwner.Category.Split(','))
        {
            category.Add(item);
        }
    }

    var data = db.Query("SELECT [id], [name] FROM [ExercisePrem] WHERE [therapistId]=@0 AND [planId]=@1 ORDER BY [Position]", userID, plan);
    
    var dataCount = data.Count();
    
    
    if (IsPost)
    {

        exerciseID = Request.Form["hiddenID"];
        exerciseName = Request.Form["exerciseName"];
        var newdirection = Request.Form["hiddenNewDirection"];
        
      if (Request.Form["btnsubmit"] == "Submit Exercise" && exerciseID == "" && exerciseName != "")
        {
        demoImage = Request.Form["demoImage"];
        detailExercise = Request.Unvalidated("detailExercise");
        video = Request.Unvalidated("video1");
        // Insert a new user into the database
        db = Database.Open("StarterSite");

        var uploadedFile = Request.Files[0];
        fileName = Path.GetFileName(uploadedFile.FileName);
        if (fileName != String.Empty)
        {
            fileMime = uploadedFile.ContentType;
            var fileStream = uploadedFile.InputStream;
            var fileLength = uploadedFile.ContentLength;
            byte[] fileContent = new byte[fileLength];
            fileStream.Read(fileContent, 0, fileLength);
            db.Execute("INSERT INTO [ExercisePrem] ([therapistId], [planId], [name], [detail], [video], [demoImage], [demoImageName], [demoImageMIME], [Position], [isComplete]) VALUES (@0, @1, @2, @3, @4, @5, @6, @7, @8, @9)", userID, plan, exerciseName, detailExercise, video, fileContent, fileMime, fileName, dataCount, false);
         }
         else
         {
             db.Execute("INSERT INTO [ExercisePrem] ([therapistId], [planId], [name], [detail], [video], [Position], [isComplete]) VALUES (@0, @1, @2, @3, @4, @5, @6)", userID, plan, exerciseName, detailExercise, video, dataCount, false);
         }
        Response.Redirect("~/Plan/PreEditExercise/" + plan);
      }

      else if (Request.Form["btnsubmit"] == "Update Exercise" && exerciseID != "" && exerciseName != "")
        {
            exerciseName = Request.Form["exerciseName"];
            demoImage = Request.Form["demoImage"];
            detailExercise = Request.Unvalidated("detailExercise");
            video = Request.Unvalidated("video1");
            // Insert a new user into the database
            db = Database.Open("StarterSite");
            var uploadedFile = Request.Files[0];
            fileName = Path.GetFileName(uploadedFile.FileName);
            if (fileName != String.Empty)
            {
                fileMime = uploadedFile.ContentType;
                var fileStream = uploadedFile.InputStream;
                var fileLength = uploadedFile.ContentLength;
                byte[] fileContent = new byte[fileLength];
                fileStream.Read(fileContent, 0, fileLength);
                db.Execute("UPDATE [ExercisePrem] SET [therapistId]=@0, [planId]=@1, [name]=@2, [detail]=@3, [video]=@4, [demoImage]=@5, [demoImageName]=@6, [demoImageMIME]=@7 WHERE [id]=@8", userID, plan, exerciseName, detailExercise, video, fileContent, fileMime, fileName, exerciseID);  
          }

            else
            {
                db.Execute("UPDATE [ExercisePrem] SET [therapistId]=@0, [planId]=@1, [name]=@2, [detail]=@3, [video]=@4 WHERE [id]=@5", userID, plan, exerciseName, detailExercise, video, exerciseID);
            }
            Response.Redirect("~/Plan/PreEditExercise/" + plan);
      }
                
        else if (Request.Form["DeleteExercise"] == "")
        {
            exerciseID = Request.Form["hiddenID"];

            if (exerciseID != "")
            {
            db.Execute("DELETE FROM [ExercisePrem] WHERE [id]=@0", exerciseID);

            Response.Redirect("~/Plan/PreEditExercise/" + plan);
            }
            
          }
          
      else if (Request.Form["btnSubmit"] == "Update Direction" && newdirection != "")
      {
          int counter = 0;

          var exQuery = db.QuerySingle("SELECT * FROM [ExercisePrem] WHERE [UserId]=@0 AND [id]=@1", userID, exerciseID);

          foreach(var direct in newdirection.Split(','))
          {
          foreach (var item in exQuery)
          {          
          if (item.Position == Convert.ToInt32(direct))
          {
              db.Execute("UPDATE [ExercisePrem] SET [Position]=@0 WHERE [id]=@1", counter, item.id);
              counter++;
          }
            }
          }
          Response.Redirect("~/Plan/EditExercise/" + plan);   
      }
        
      else{

          if (exerciseID != "")
          {
              var exQuery = db.QuerySingle("SELECT * FROM [ExercisePrem] WHERE [id]=@0", exerciseID);
         
                  exerciseName = exQuery.name;
                  detailExercise = exQuery.detail;
                  video = exQuery.video;
                  countLimit = countLimit - exQuery.detail.Length;
                  image = exQuery.demoImageMIME;

          }
      }
    }
}

@section featured {
<section class="featured"> 
     <div class="content-wrapper">  
<hgroup class="title">
            <h1>@Page.Title.</h1>
            <h2>Sharapist: A Network For Therapy</h2>
</hgroup>
 <section id="ExerciseForm"> 
     <form method="post" id="form1" name="form1" enctype="multipart/form-data">
         <div>
                <ul style="list-style: none;">
                    <li>
                    <label>Plan Name: @findOwner.name</label>
                            <label>Plan Category</label>
                            <select data-placeholder="Category" name="tocat" id="tocat" style="width:500px; list-style: none;" multiple class="chzn-select" tabindex="8">
                    @if(category != null)
                    {
                    foreach(var item in category)
                    {
                      <option id="@item" selected="selected" value="@item">@item</option>  
                    }
                    }
                </select>
            <h2>Available Exercise: </h2>
                       
                         <table id="table-1" style="border: solid; max-height: 300px; max-width: 300px">
                             @foreach (var exercise in data)
                             {
                            <tr id="@count">
                                <td>
                         <a href="#" title="@exercise.name" onclick="PopulateExercise(this,@exercise.id)">@exercise.name</a>
                                    </td>
                                <td>
                         <input type="submit" name="DeleteExercise" style="background-image: url(/Images/Minus.png); background-size: 30px; height: 30px; width: 30px" onclick="RemoveExercise(@exercise.id)" value="" />
                            </td>
                                    </tr>
                                 count++;
                             }
                                </table>
                        
                        <script type="text/javascript">
                            $(document).ready(function() {
                                $('#table-1').tableDnD({
                                    onDrop: function(table, row) {
                                        $("#hiddenNewDirection").val(($.tableDnD.serialize()));
                                    }
                                });
                            });
                        </script>
                     <input type="submit" id="updateDirection" name="btnSubmit" value="Update Direction" />
                     <input type="hidden" id="hiddenNewDirection" name="hiddenNewDirection" />
                    </li>
                    </ul>
                   </div>
         <div>
                     <ul style="list-style: none">
                        <li class="ExerciesName">
                <label>Exercise Name: </label>
                <input type="text" id="exerciseName" name="exerciseName" value="@exerciseName" maxlength="300" />
                <input type="hidden" id="hiddenID" name="hiddenID" value="@exerciseID" />
                            </li>
                        <li class="Details">
                <label>Details: </label>
                <textarea name="detailExercise"  id="detailExercise" style="height:150px" onKeyDown="limitText(this.form.detailExercise,this.form.countdown,2000);" 
                onKeyUp="limitText(this.form.detailExercise,this.form.countdown,2000);" maxlength="2000">@detailExercise</textarea>
                            <br />
                    <font size="1">(Maximum characters: 2000)<br>
                You have <input readonly="" type="text" name="countdown" size="3" value="@countLimit"> characters left.</font>
                            </li>
                        <li>
                            <table>
                                <tr>
                                    <td>
                                         <label>Demonstration: </label>
                                        <label>Take Snapshot using WebCam:</label>
                                        <div style="text-align:center;">
<video id="video" width="250" height="250" autoplay></video>
<button id="snap" type="button" onclick="TakePic()">Snap Photo</button>
<canvas id="canvas" width="250" height="250" hidden="hidden"></canvas>
</div>
<script type="text/javascript">
    function hasGetUserMedia() {
        // Note: Opera is unprefixed.
        return !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||
                  navigator.mozGetUserMedia || navigator.msGetUserMedia);
    }

    // Put event listeners into place
    window.addEventListener("DOMContentLoaded", function() {
        // Grab elements, create settings, etc.
        var canvas = document.getElementById("canvas"),
            context = canvas.getContext("2d"),
            video = document.getElementById("video"),
            videoObj = { "video": true },
            errBack = function(error) {
                console.log("Video capture error: ", error.code); 
            };

        // Put video listeners into place
        if(navigator.getUserMedia) { // Standard
            navigator.getUserMedia(videoObj, function(stream) {
                video.src = stream;
                video.play();
            }, errBack);
        } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed
            navigator.webkitGetUserMedia(videoObj, function(stream){
                video.src = window.webkitURL.createObjectURL(stream);
                video.play();
            }, errBack);
        }
        // Trigger photo take
        document.getElementById("snap").addEventListener("click", function() {
            if(hasGetUserMedia())
            {
                context.drawImage(video, 0, 0, 250, 250);
                var item = document.getElementById("fileUpload");
                item.value = "";
                var image = context.toDataURL("image/png");
                image = image.replace('data:image/png;base64,', '');
                document.getElementById("hiddenImage").value = image;
                return false;
            }
            else
            {
                alert("Your Browser Doesn't Support This Feature!");
                return false;
            }
        });
    }, false);    
    </script>
                                        <input type="hidden" id="hiddenImage" name="hiddenImage" />
                                    </td>
                                    </tr>
                                <tr>
                                    <td>
                                        <label>Or Upload Image for Demostration:</label>
                                        <input type="file" id="fileUpload" name="fileUpload" onclick="fileUpload()"/>
                                    </td>
                                </tr>
                            </table>
                           @if (IsPost && (image != "" || image != null))
                                {
                                    <img width="400" height="300" src="~/Plan/downloadExerciseImg.cshtml/@exerciseID" alt=""  /> 
                                } 
                            </li>
                        <li>
                <label>Video: </label>
                <input type="text" id="video1" name="video1" value="@video" maxlength="300" title="Copy the url information after the 'watch?v='" />
                                           @if (IsPost && video != "")
                {
<iframe class="youtube-player" width="500" height="365" src="http://www.youtube.com/embed/@video" >
                </iframe>                                            }                             
                        </li>
                    </ul>                
                    
            <input type="submit" name="btnsubmit" value="Update Exercise" />
            <input type="submit" name="btnsubmit" value="Submit Exercise" />
                     </div>
        </form>
         </section>
      </div>
    </section>
    }