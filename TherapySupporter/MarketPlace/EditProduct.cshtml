@section Scripts {
     <script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
     <script type="text/javascript"> $(".chzn-select").chosen(); $(".chzn-select-deselect").chosen({ allow_single_deselect: true }); </script>
    <script src="~/Scripts/FancyZoom1.1/js-global/FancyZoom.js" type="text/javascript"></script>
    <script src="~/Scripts/FancyZoom1.1/js-global/FancyZoomHTML.js" type="text/javascript"></script>
}

@{
    Layout = "~/_SiteMain.cshtml";
    Page.Title = "Edit Product";
    if (WebSecurity.CurrentUserName == "")
    {
        Response.Redirect("~/Account/Login");
    }

    // Initialize general page variables
    var showV = "";
    var visibility = 2;
    var type = 0;
    var proName = "";
    var userName = WebSecurity.CurrentUserName;
    var userID = WebSecurity.CurrentUserId;
    var fileName = "";
    var fileMime = "";
    var timestamp = "";
    var isAvailable = false;
    var roles = (SimpleRoleProvider)Roles.Provider;
    Validation.RequireField("proName", "You must specify an product name.");
    Validation.RequireField("description", "Description cannot be blank.");
    Validation.RequireField("price", "The price cannot be blank.");
    Validation.RequireField("proID", "You must specify an product name.");

    Response.OutputCache(60);

    if (!UrlData[0].IsInt())
    {
        Response.Redirect("~/Profile/Profile");
    }

    var proID = UrlData[0].AsInt();
    
    if (roles.GetRolesForUser(userName).Contains("Client"))
    {
        Response.Redirect("~/Premium/ClientHome");
    }
    if (roles.GetRolesForUser(userName).Contains("Physical Therapist") || roles.GetRolesForUser(userName).Contains("Student: PT"))
    {
        type = 1;
    }
    if (roles.GetRolesForUser(userName).Contains("Occupational Therapist") || roles.GetRolesForUser(userName).Contains("Student: OT"))
    {
        type = 2;
    }
    if (roles.GetRolesForUser(userName).Contains("Personal Trainer"))
    {
        type = 3;
    }

    var db = Database.Open("StarterSite");

    var user = db.QuerySingle("SELECT * FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", userName);

    if (user.Disabled)
    {
        Response.Redirect("~/Account/Disabled Account");
    }

    var productQue = db.QuerySingle("SELECT * FROM [Products] WHERE [UserId]=@0 AND [id]=@1", userID, proID);

    // If this is a POST request, validate and process data
    if (IsPost)
    {
        if(Validation.IsValid())
          {
        proID = Convert.ToInt32(Request.Form["hiddenID"]);
        proName = Request.Form["proName"];
        visibility = Convert.ToInt32(Request.Form["proVis"]);
        var quantity = Request.Form["quantity"];
        var category = Request.Form["tocat"];
        var price = Request.Form["price"];
        var description = Request.Form["description"];
        var productID = Request.Form["proID"];

        if (quantity == "on")
        {
            isAvailable = true;
        }
        else
        {
            isAvailable = false;
        }
            
        if (category == null)
        {
            category = "";
        }

        else if (Request.Form["btnSubmit"] == "Update Product" && proID != null)
        {            
                    var uploadedF = Request.Files[0];
                    fileName = Path.GetFileName(uploadedF.FileName);
                    if (fileName != String.Empty)
                    {
                        fileMime = uploadedF.ContentType;
                        var fileStream = uploadedF.InputStream;
                        var fileLength = uploadedF.ContentLength;
                        byte[] fileContent = new byte[fileLength];
                        fileStream.Read(fileContent, 0, fileLength);
                        db.Execute("UPDATE [Products] SET [name]=@0, [ProductImage]=@1, [ProductImageName]=@2, [ProductImageMIME]=@3, [isAvailable]=@4, [Group]=@5, [timestamp]=@6, [Visibility]=@7, [Price]=@8, [Description]=@9, [ProductID]=@10 WHERE [id]=@11", proName, fileContent, fileMime, fileName, isAvailable, category, DateTime.Now, visibility, price, description, productID, proID);
                    }
                    else
                    {
                        db.Execute("UPDATE [Products] SET [Name]=@0, [isAvailable]=@1, [Group]=@2, [timestamp]=@3, [Visibility]=@4, [Price]=@5, [Description]=@6, [ProductID]=@7 WHERE [id]=@8", proName, isAvailable, category, DateTime.Now, visibility, price, description, productID, proID);
                    }

                    Response.Redirect("~/Profile/Profile");

        }

        else if (Request.Form["btnSubmit"] == "Delete Product")
        {
            if (proID != null)
            {
                db.Execute("DELETE FROM [Products] WHERE [id]=@0", proID);
                db.Execute("DELETE FROM [RecommendTable] WHERE [ProductId]=@0", proID); 

                Response.Redirect("~/Profile/Profile");
            }
        }
    }
  }
  }

<script>
    function myFunction() {
        alert("Before you can edit a product, you must have a Merchant ID for PayPal. Please add a Merchant ID in Edit Profile"); document.location.href = "/Profile/EditProfile";
    }
</script>

@if(user.PayPal == null)
{
<body onload="myFunction()">
    </body>
    }

 @section featured {
<section class="featured"> 
     <div class="content-wrapper">  
<hgroup class="title">
            <h1>@Page.Title.</h1>
            <h2>Sharapist: A Network For Therapy</h2>
</hgroup>
         <section id="PlanForm">
        <form name="form1"  method="post" enctype="multipart/form-data">
            <div>
                
                   <h3>Product Information</h3>
                            <ul style="list-style: none">
                                <li>
                <label>Product ID: </label>
                <input type="text" id="proID" name="proID" value="@productQue.ProductID" maxlength="300" />
                                </li>
                    <li>
                    <label>Product Name: </label>
                <input type="text" id="proName" name="proName" value="@productQue.Name" maxlength="300" />
                <input type="hidden" id="hiddenID" name="hiddenID" value="@productQue.id" />
                          </li>
                                <li>
                                    <label>Current Image</label>
                                     @if (productQue.ProductImageMIME != null)
                                            {
        <img class="product-image order-image" height="100" width="100" src="~/Dynamic/downloadProductImage/@productQue.id" alt="Image of @productQue.Name"/>
                                            }
                                            else
                                            {
                                    <img src="~/Images/QuestionMark.png" alt="" height="100"  width="100" />   
                                            } 
                                </li>
                    <li>
                        <label>Upload New Product Image: </label>
                            <input type="file" name="fileUpload"/>
                    </li>

                                <li>
                                    <label id="QuantityLab">In Stock?</label>
                                    @if (productQue.isAvailable == true)
                                    {
                                    <input type="checkbox" name="quantity" id="quantity" checked="checked" />
                                    }
                                    else
                                    {
                                     <input type="checkbox" name="quantity" id="quantity" />
                                    }
                                </li>

                                <li>
                                    <label id="Description">Description</label>
                                    <input type="text" name="description" id="description" value="@productQue.Description" />
                                </li>
                                            <li>
                <li>
                    @if (@productQue.Visibility != null)
                    {
                        if (productQue.Visibility == 2)
                        {
                            showV = "Everyone";
                        }
                        else
                        {
                            showV = "Only Clients";
                        }
                    }
                <label id="proLabelVis">Product Visibility</label>
                 <select id="proVis" name="proVis" size="1" >
                     <option value="@productQue.Visibility" selected="selected">@showV</option>
                    <option value="2">Everyone</option>
                    <option value="1">Only Clients</option>
                  </select>
             </li>
             <li>
                 <label>Product Category</label>
                <select data-placeholder="Category" name="tocat" id="tocat" style="width:500px; list-style: none;" multiple class="chzn-select" tabindex="8">
                    @if (productQue.Group != null)
                    {
                        foreach (var item in productQue.Group.Split(','))
                        {
                      <option id="@item" selected="selected" value="@item">@item</option>  
                        }
                    }
                     <optgroup label="Leg">
                      <option id="Hamstring" value="Hamstring">Hamstring</option>
                      <option id="Quad" value="Quad">Quad</option>
                      <option id="Calf" value="Calf">Calf</option>
                      <option id="Hip" value="Hip">Hip</option>
                      <option id="Knee" value="Knee">Knee</option>
                      <option id="Ankle" value="Ankle">Ankle</option>
                    </optgroup>
                    <optgroup label="Back">
                      <option id="Multifidus" value="Multifidus">Multifidus</option>
                      <option id="Transversus Abdominus" value="Transversus Abdominus">Transversus Abdominus</option>
                      <option id="Latissimus dorsi" value="Latissimus dorsi">Latissimus dorsi</option>
                      <option id="Trapezius" value="Trapezius">Trapezius</option>
                    </optgroup>
                    <optgroup label="Arm">
                        <option id="Bicep" value="Bicep">Bicep</option>
                        <option id="Tricep" value="Tricep">Tricep</option>
                        <option id="Shoulder" value="Shoulder">Shoulder</option>
                        <option id="Elbow" value="Elbow">Elbow</option>
                     </optgroup>
                    <optgroup label="Other">
                        <option id="Neck" value="Neck">Neck</option>
                        <option id="Abdomen" value="Abdomen">Abdomen</option>
                    </optgroup>
                </select>
             </li>
                                <li>
                                    <label>Price</label>
                                    <input type="text" name="price" id="price" value="@productQue.Price" />
                                </li>
                    <li>
                        <input type="submit" name="btnSubmit" value="Update Product" />
                        <input type="submit" name="btnSubmit" value="Delete Product"/>
                    </li>
                </ul>
           </div>
            </form>
    </section>
         </div>
     </section>
                     }