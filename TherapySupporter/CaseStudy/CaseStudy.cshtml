@section Scripts {
     <script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
     <script type="text/javascript"> $(".chzn-select").chosen(); $(".chzn-select-deselect").chosen({ allow_single_deselect: true }); </script>
}

@{
    Layout = "~/_SiteMain.cshtml";
    Page.Title = "Create/Modify Case Study";
    if (WebSecurity.CurrentUserName == "")
    {
        Response.Redirect("~/Account/Login");
    }

    var visibility = 2;
    var caseName = "";
    var caseInfo = Request.Unvalidated("caseInfo");
    var caseNotes = Request.Unvalidated("caseNotes");
    var type = 0;
    var caseID = "";
    var countLimitCI = 2000;
    var countLimitCN = 2000;
    var userID = WebSecurity.CurrentUserId;
    var timestamp = "";
    var userName = WebSecurity.CurrentUserName;
    var roles = (SimpleRoleProvider)Roles.Provider;
    List<dynamic> cat = new List<dynamic>();


    if (roles.GetRolesForUser(userName).Contains("Client"))
    {
        Response.Redirect("~/Premium/ClientHome");
    }

    if (roles.GetRolesForUser(userName).Contains("Physical Therapist") || roles.GetRolesForUser(userName).Contains("Student: PT"))
    {
        type = 1;
    }
    if (roles.GetRolesForUser(userName).Contains("Occupational Therapist") || roles.GetRolesForUser(userName).Contains("Student: OT"))
    {
        type = 2;
    }
    if (roles.GetRolesForUser(userName).Contains("Personal Trainer"))
    {
        type = 3;
    }

    var db = Database.Open("StarterSite");

    var user = db.QueryValue("SELECT [Disabled] FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", userName);

    if (user)
    {
        Response.Redirect("~/Account/Disabled Account");
    }

    var caseQue = db.Query("SELECT * FROM [CaseStudies] WHERE [UserId]=@0", userID).ToList();
    
    if (IsPost)
    {

        caseID = Request.Form["hiddenID"];
        caseName = Request.Form["caseName"];
        caseInfo = Request.Unvalidated["caseInfo"];
        caseNotes = Request.Unvalidated["caseNotes"];
        timestamp = Request.Form["timestamp"];
        var visible = Request.Form["caseVis"];
        var category = Request.Form["tocat"];

        if (category == null)
        {
            category = "";
        }      
        
        if(Request.Form["btnSubmit"] == "Submit Case" && caseID == "" && caseName != "")
        {
        
        visibility = Convert.ToInt32(visible);

        db.Execute("INSERT INTO [CaseStudies] ([UserId], [name], [information], [notes], [userFavorite], [favorite], [timestamp], [visibility], [Type], [Category], [isFlag]) VALUES (@0, @1, @2, @3, @4, @5, @6,@7,@8,@9,@10)", userID, caseName, caseInfo, caseNotes, false, 0, timestamp, visibility,type,category,false);

        Response.Redirect("~/CaseStudy/CaseStudy");
        }

        if (Request.Form["btnSubmit"] == "Update Case" && caseID != "")
        {

            visibility = Convert.ToInt32(visible);

            db.Execute("UPDATE [CaseStudies] SET [name]=@0, [information]=@1, [notes]=@2, [visibility]=@3, [Type]=@6, [Category]=@7, [isFlag]=@8 WHERE [id]=@4 AND [UserId]=@5", caseName, caseInfo, caseNotes, visibility, caseID, userID, type,category,false);

            Response.Redirect("~/CaseStudy/CaseStudy");
        }

        if (Request.Form["DeleteCase"] == "")
        {
            caseID = Request.Form["hiddenID"];

            if (caseID != "")
            {
            db.Execute("DELETE FROM [CaseStudies] WHERE [id]=@0", caseID);

            Response.Redirect("~/CaseStudy/CaseStudy");
            }
        }
        
        else {
           if (caseID != "")
          {              
          var exQuery = db.QuerySingle("SELECT * FROM [CaseStudies] WHERE [id]=@0", caseID);
          
          caseName = exQuery.name;
          caseInfo = exQuery.information;
          caseNotes = exQuery.notes;
          visibility = exQuery.visibility;
          countLimitCI -= exQuery.information.Length;
          countLimitCN -= exQuery.notes.Length;
          if(exQuery.Category != null)
          {
          cat = exQuery.Category.Split(',');
          }
             
        }
        }

}
}

@section featured {
<section class="featured">
    <div class="content-wrapper">
        <hgroup class="title">
            <h1>@Page.Title.</h1>
        </hgroup>
        <div/>
    <form id="form1" name="form1" method="post">
        <div>
                             <input type="hidden" name="timestamp" value="@DateTime.Now" />
                <h2>Available Case Studies: </h2>
            @if(caseQue.Count > 0)
            {
            <ul style="list-style: none">
                <li>
                          <table style="max-height: 300px; max-width: 300px" id="SelectTable">
                              <tr>
                                  <th>Case Study</th>
                                  <th>Delete?</th>
                              </tr>
                             @foreach (var caseS in caseQue)
                                 {
                              <tr>
                                  <td>
                       <a href="#" style="font:bold 13px arial,verdana" title="@caseS.name" onclick="PopulateCase(@caseS.id,this)">@caseS.name</a>
                                      </td>
                                  <td>
                       <input type="submit" name="DeleteCase" style="background-image: url(/Images/Minus.png); background-size:30px; height: 30px; width: 30px" onclick="RemoveCase(@caseS.id)" value="" />
                      </td>
                                      </tr>
                             }
                                  </table>
                    </li>
                </ul>
            }
            else
            {
                                        <label>No available case studies.</label>
            }
        </div>

        <div>
                    <h2>Case Study Information</h2>
                    <ul style="list-style: none">
                    <li>
                <label>Case Name: </label>
                <input type="text" value="@caseName" id="caseName" name="caseName" maxlength="100"></input>
                <input type="hidden" id="hiddenID" name="hiddenID" />
                        </li>
                    <li>
                <label>Case Information: </label>
                <textarea id="caseInfo" name="caseInfo" onKeyDown="limitText(this.form.caseInfo,this.form.countdown,2000);" 
                onKeyUp="limitText(this.form.caseInfo,this.form.countdown,2000);" maxlength="2000">
                    @if (!caseInfo.IsEmpty())
                    {
                    @caseInfo.ToString().AsSafeHtml()}</textarea>
                        <br />
                    <font size="1">(Maximum characters: 2000)<br>
                You have <input readonly="" type="text" name="countdown" size="3" style="width: 40px" value="@countLimitCI"> characters left.</font>
                     </li>
                        <li>
                <label>Notes: </label>
                <textarea id="caseNotes" name="caseNotes" onKeyDown="limitText(this.form.caseNotes,this.form.countdown1,2000);" 
                onKeyUp="limitText(this.form.caseNotes,this.form.countdown1,2000);" maxlength="2000">
                    @if (!caseNotes.IsEmpty())
                    {
                    @caseNotes.ToString().AsSafeHtml()}</textarea>
                            <br />
                    <font size="1">(Maximum characters: 2000)<br>
                You have <input readonly="" type="text" name="countdown1" size="3" style="width: 40px" value="@countLimitCN"> characters left.</font>                        
                            </li>
                                    <li>
                <label>Case Visablity</label>
                 <select id="caseVis" name="caseVis" size="1" >
                    <option value="2" selected="selected">Everyone</option>
                    <option value="1">Only Peope in Peer Network</option>
                    <option value="0">No One</option>
                     @switch (visibility)
                     {
                         case 2:
                     <option value="2" selected="selected">Everyone</option>
                             break;
                         case 1:
                     <option value="1" selected="selected">Only Peope in Peer Network</option>
                             break;
                         case 0:
                     <option value="0" selected="selected">No One</option>
                             break;
                     }
                  </select>
            </li>
                        <li>
                 <label>Case Study Category</label>
                            <select data-placeholder="Category" name="tocat" id="tocat" style="width:500px; list-style: none;" multiple class="chzn-select" tabindex="8">
                     <optgroup label="Leg">
                      <option id="Hamstring" value="Hamstring">Hamstring</option>
                      <option id="Quad" value="Quad">Quad</option>
                      <option id="Calf" value="Calf">Calf</option>
                      <option id="Hip" value="Hip">Hip</option>
                      <option id="Knee" value="Knee">Knee</option>
                      <option id="Ankle" value="Ankle">Ankle</option>
                    </optgroup>
                    <optgroup label="Back">
                      <option id="Multifidus" value="Multifidus">Multifidus</option>
                      <option id="Transversus Abdominus" value="Transversus Abdominus">Transversus Abdominus</option>
                      <option id="Latissimus dorsi" value="Latissimus dorsi">Latissimus dorsi</option>
                      <option id="Trapezius" value="Trapezius">Trapezius</option>
                    </optgroup>
                    <optgroup label="Arm">
                        <option id="Bicep" value="Bicep">Bicep</option>
                        <option id="Tricep" value="Tricep">Tricep</option>
                        <option id="Shoulder" value="Shoulder">Shoulder</option>
                        <option id="Elbow" value="Elbow">Elbow</option>
                     </optgroup>
                    <optgroup label="Other">
                        <option id="Neck" value="Neck">Neck</option>
                        <option id="Abdomen" value="Abdomen">Abdomen</option>
                    </optgroup>
                @if (cat != null)
                {
                    foreach (var item in cat)
                    {
                      <option id="@item" value="@item">@item</option>  
                    }
                }
                </select>
             </li>
                            </ul>
                    <input type="submit" name="btnSubmit" value="Submit Case" />
                    <input type="submit" name="btnSubmit" value="Update Case" />
    </div>
        </form>
        </div>
    </section>
        }