@section Scripts {
     <script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
     <script type="text/javascript"> $(".chzn-select").chosen(); $(".chzn-select-deselect").chosen({ allow_single_deselect: true }); </script>
}

@{
    Layout = "~/_SiteMessage.cshtml";
    Page.Title = "View Message";
    if (WebSecurity.CurrentUserName == "")
    {
        Response.Redirect("~/Account/Login");
    }

    var getReceiver = 0;
    var senderName = "";
    var subject = "";
    var body = "";
    var dbody = "";
    var userName = WebSecurity.CurrentUserName;
    var userID = WebSecurity.CurrentUserId;
    var roles = (SimpleRoleProvider)Roles.Provider;

    if (roles.GetRolesForUser(userName).Contains("Client"))
    {
        Response.Redirect("~/Premium/ClientHome");
    }

    Response.OutputCache(60);

    if (!UrlData[0].IsInt())
    {
        Response.Redirect("~/Messaging/Inbox");
    }

    var message = UrlData[0].AsInt();

    bool ismore = true;
    List<dynamic> list_message = new List<dynamic>();
    List<string> usingR = new List<string>();
    var db = Database.Open("StarterSite");

    var user = db.QueryValue("SELECT [Disabled] FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", userName);

    if (user)
    {
        Response.Redirect("~/Account/Disabled Account");
    } 
    
    var inbox = db.QuerySingle("SELECT [Messages].*, [Mail].[isRead] FROM [Messages] INNER JOIN [Mail] ON [Messages].[id]=[Mail].[Emailid] WHERE ([Messages].[id])=@0 AND (receiverId) LIKE @1", message, "%"+userID+"%");
    
    
    if (inbox == null)
    {
        Response.Redirect("~/Messaging/Inbox");
    }
        
    if (inbox.isRead == false)
    {
        db.Execute("UPDATE [Mail] SET [isRead]=@0 WHERE [Emailid]=@1 AND [UserId]=@2", true, message, userID); 
    }

    var findsender = db.QuerySingle("SELECT * FROM [UserProfile] WHERE [UserId]=@0", inbox.senderId);

    var findlink = inbox.linkedMessage;
    
    if (findlink != null)
    {
    do
    {
        var findmessage=db.QuerySingle("SELECT [Messages].*, [UserProfile].[firstName], [UserProfile].[lastName] FROM [Messages] INNER JOIN [UserProfile] ON [Messages].[senderId]=[UserProfile].[UserId] WHERE [id]=@0", findlink);
        list_message.Add(findmessage);

        List<string> Receiver = new List<string>();

        foreach (var item in findmessage.receiverId.Split(','))
        {
            var send = db.QuerySingle("SELECT [firstName], [lastName] FROM [UserProfile] WHERE [UserId]=@0", item);
            Receiver.Add(send.firstName + " "+send.lastName);
        }
        
        if (findmessage.linkedMessage == null)
        {
            string addReceiver = string.Join(",", Receiver.ToArray());
            usingR.Add(addReceiver);
            ismore = false;
        }
        else
        {
            string addReceiver = string.Join(",", Receiver.ToArray());
            usingR.Add(addReceiver);
            findlink = findmessage.linkedMessage;  
        }
    }
    while (ismore == true);
    }

    List<string> ReceiverList = new List<string>();

    foreach (var item in inbox.receiverId.Split(','))
    {
        var send = db.QuerySingle("SELECT * FROM [UserProfile] WHERE [UserId]=@0", item);
        ReceiverList.Add(send.firstName + " " + send.lastName);
    }
    
    senderName = findsender.firstName + " " + findsender.lastName;
    subject = inbox.messageTitle;
    body = inbox.message;
    
    if (IsPost)
    {

       if(Request.Form["btnSubmit"] == "Reply")
       {
           Response.Redirect("~/Messaging/Reply/"+message);
       }
       
        if(Request.Form["btnSubmit"] == "Forward")
        {
            Response.Redirect("~/Messaging/Forward/"+message);
        }

        if (Request.Form["passSubmit"] == "")
        {
            var password = Request.Form["decryptPass"];

            var verifyPass = Crypto.VerifyHashedPassword(inbox.Password, password);

            if (verifyPass)
            {
                body = inbox.message;
                var decrypt_body = StringCipher.Decrypt(body, password);
                dbody = decrypt_body;
            }
            else
            {
                dbody = "Password is not valid";
            }
        }
        
    }
}

<section>
    <div class="content-wrapper">
        <hgroup class="title">
            <h1>@Page.Title.</h1>
            <h2>Sharapist: A Network For Therapy</h2>
        </hgroup>
        <div/>
    <form id="form1" name="form1" method="post" action="">
                <fieldset>
                    <legend>New Message</legend>
                    <ol>
                        <li>
                            <label>From: </label>
                <select data-placeholder="Find Peer" name="topeer" id="frompeer" style="width:500px; list-style: none;" multiple class="chzn-select" tabindex="8" disabled="disabled">
                        <option selected value="@findsender.UserID">@findsender.firstName @findsender.lastName</option>
                </select> 
                        </li>
                    <li>
                <label>To: </label>
                <select disabled="disabled" data-placeholder="Find Peer" name="topeer" id="topeer" style="width:500px; list-style: none;" multiple class="chzn-select" tabindex="8">
                    @foreach (var item in ReceiverList)
                    {
                        <option selected value="@item">@item</option>
                    }
                </select> 
                    <li>
                <label>Subject: </label>
                <input disabled="disabled" type="text" name="subject" value="@subject" id="subject" />
                     </li>
                       <li>
                            @if (inbox.isEncrypt)
                            {
                <label>Body: </label>
                <textarea disabled="disabled" name="Dbody" id="Dbody">@dbody</textarea>
                 <label>Enter Password To Decrypt Message:</label>
                <input type="password" name="decryptPass" />
                <input type="submit" value="" name="passSubmit" title="Decrypt Message" style="background-image: url(/Images/Key.png); background-size: 30px; height: 30px; width: 30px" />
                            }
                            else
                            {
                                <label>Body: </label>
                <textarea disabled="disabled" name="body" id="body">@body</textarea>
                            }
                            </li>
                            </ol>
                    </fieldset>
        @if(!inbox.isEncrypt)
        {
                <input type="submit" value="Reply" name="btnSubmit" id="reply" />
                <input type="submit" value="Forward" name="btnSubmit" id="forward" />
                         foreach (var item in list_message)
                         {
                            <ul style="list-style: none">
                                <li>
                                    <label>@item.timestamp</label>
                                </li>
                                <li>
                                    <label>From: @item.firstName @item.lastName</label>
                                </li>
                                <li>
                                    <label>To: @usingR[getReceiver]</label>
                                </li>
                                <li>
                                    <label>Subject: @item.messageTitle</label>
                                </li>
                                <li>
                                    <textarea disabled="disabled">@item.message</textarea>
                                </li>
                            </ul>
                             getReceiver++;
                         }
        }
        </form>
        </div>
    </section>